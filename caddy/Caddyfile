# ##### CADDYFILE #########################################
# Ref: https://caddyserver.com/docs/caddyfile/options

# ===== GLOBAL OPTIONS BLOCK ==============================
{
	# ----- General Options -------------------------------
	# debug

	# ----- TLS Settings ----------------------------------
	email {$EMAIL_FOR_ACME}
	# Staging URL for Let's Encrypt is below. Uncomment for testing.
	# acme_ca https://acme-staging-v02.api.letsencrypt.org/directory
	# local_certs # issue internal certs (for local / dev environments)
	acme_dns cloudflare {$CF_API_TOKEN}

	# ----- Caddy Security Settings -----------------------

	order authenticate before respond
	order authorize before basicauth

	security {
		local identity store localdb {
			realm local
			path /data/auth/users.json
		}

		authentication portal myportal {
			crypto default token lifetime 3600
			crypto key sign-verify {env.JWT_SHARED_KEY}
			cookie domain {$MY_DOMAIN}
			enable identity store localdb
			ui {
				links {
					"Labranet Home" https://labranet.com icon "las la-home"
					"My Identity" "/whoami" icon "las la-user"
				}
			}
			transform user {
				match origin local
				action add role authp/user
				ui link "Portal Settings" /settings icon "las la-cog"
			}
		}

		authorization policy main_policy {
			set auth url https://auth.{$MY_DOMAIN}
			allow roles authp/admin authp/user
			crypto key verify {env.JWT_SHARED_KEY}
			acl rule {
				comment allow users
				match role authp/user
				allow stop log info
			}
			acl rule {
				comment default deny
				match any
				deny log warn
			}
		}
	}
}

# ===== SNIPPETS ==========================================
# (redirect) {
# 	@http {
# 		protocol http
# 	}
# 	redir @http https://{host}{uri}
# }

# ===== SITE BLOCKS =======================================

# ----- Initial Caddy Testing -----------------------------
#test1.{$MY_DOMAIN} {
#	respond "Hello, World!"
#}

#test2.{$MY_DOMAIN} {
#	reverse_proxy nginx:80
#}

# ----- Caddy-Security Auth & Portal ----------------------
auth.{$MY_DOMAIN} {
	route {
		authenticate with myportal
	}
}

# ----- STARTPAGE -----------------------------------------
{$MY_DOMAIN}, www.{$MY_DOMAIN} {
	route {
		authorize with main_policy
		reverse_proxy flame:5005
	}
}

# ----- BUDIBASE ------------------------------------------
#budibase.{$MY_DOMAIN} {
#	reverse_proxy bbproxy:10000
#}

# ----- POSTGRESQL & PGADMIN ------------------------------
#pgadmin.{$MY_DOMAIN} {
#	reverse_proxy pgadmin:80
#}
